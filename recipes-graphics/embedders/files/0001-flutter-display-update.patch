diff --git a/examples/flutter-drm-gbm-backend/flutter_embedder_options.h b/examples/flutter-drm-gbm-backend/flutter_embedder_options.h
index 4c22913..cae06ae 100644
--- a/examples/flutter-drm-gbm-backend/flutter_embedder_options.h
+++ b/examples/flutter-drm-gbm-backend/flutter_embedder_options.h
@@ -27,8 +27,8 @@ class FlutterEmbedderOptions {
 #elif defined(FLUTTER_TARGET_BACKEND_X11)
     options_.AddWithoutValue("fullscreen", "f", "Always full-screen display",
                              false);
-    options_.AddInt("width", "w", "Window width", 1280, false);
-    options_.AddInt("height", "h", "Window height", 720, false);
+    options_.AddInt("width", "w", "Window width", 800, false);
+    options_.AddInt("height", "h", "Window height", 480, false);
 #else  // FLUTTER_TARGET_BACKEND_WAYLAND
     options_.AddWithoutValue("onscreen-keyboard", "k",
                              "Enable on-screen keyboard", false);
@@ -36,8 +36,8 @@ class FlutterEmbedderOptions {
                              "Enable window decorations", false);
     options_.AddWithoutValue("fullscreen", "f", "Always full-screen display",
                              false);
-    options_.AddInt("width", "w", "Window width", 1280, false);
-    options_.AddInt("height", "h", "Window height", 720, false);
+    options_.AddInt("width", "w", "Window width", 800, false);
+    options_.AddInt("height", "h", "Window height", 480, false);
 #endif
   }
   ~FlutterEmbedderOptions() = default;
@@ -122,8 +122,8 @@ class FlutterEmbedderOptions {
   bool use_window_decoration_ = false;
   flutter::FlutterViewController::ViewMode window_view_mode_ =
       flutter::FlutterViewController::ViewMode::kNormal;
-  int window_width_ = 1280;
-  int window_height_ = 720;
+  int window_width_ = 800;
+  int window_height_ = 480;
   flutter::FlutterViewController::ViewRotation window_view_rotation_ =
       flutter::FlutterViewController::ViewRotation::kRotation_0;
 };
diff --git a/examples/flutter-wayland-client/flutter_embedder_options.h b/examples/flutter-wayland-client/flutter_embedder_options.h
index 4c22913..5221c9c 100644
--- a/examples/flutter-wayland-client/flutter_embedder_options.h
+++ b/examples/flutter-wayland-client/flutter_embedder_options.h
@@ -27,8 +27,8 @@ class FlutterEmbedderOptions {
 #elif defined(FLUTTER_TARGET_BACKEND_X11)
     options_.AddWithoutValue("fullscreen", "f", "Always full-screen display",
                              false);
-    options_.AddInt("width", "w", "Window width", 1280, false);
-    options_.AddInt("height", "h", "Window height", 720, false);
+    options_.AddInt("width", "w", "Window width", 800, false);
+    options_.AddInt("height", "h", "Window height", 480, false);
 #else  // FLUTTER_TARGET_BACKEND_WAYLAND
     options_.AddWithoutValue("onscreen-keyboard", "k",
                              "Enable on-screen keyboard", false);
@@ -36,8 +36,8 @@ class FlutterEmbedderOptions {
                              "Enable window decorations", false);
     options_.AddWithoutValue("fullscreen", "f", "Always full-screen display",
                              false);
-    options_.AddInt("width", "w", "Window width", 1280, false);
-    options_.AddInt("height", "h", "Window height", 720, false);
+    options_.AddInt("width", "w", "Window width", 800, false);
+    options_.AddInt("height", "h", "Window height", 480, false);
 #endif
   }
   ~FlutterEmbedderOptions() = default;
@@ -122,8 +122,8 @@ class FlutterEmbedderOptions {
   bool use_window_decoration_ = false;
   flutter::FlutterViewController::ViewMode window_view_mode_ =
       flutter::FlutterViewController::ViewMode::kNormal;
-  int window_width_ = 1280;
-  int window_height_ = 720;
+  int window_width_ = 800;
+  int window_height_ = 480;
   flutter::FlutterViewController::ViewRotation window_view_rotation_ =
       flutter::FlutterViewController::ViewRotation::kRotation_0;
 };
